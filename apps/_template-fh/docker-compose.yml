services:
  template-fh:
    image: <image>
    restart: unless-stopped
    volumes:
      - ${APP_DATA_DIR}/data/template-fh:/path/in/app
    environment:
      - ENV=env
    depends_on:
      - template-fh-db
      - template-fh-redis
    networks:
      - tipi_main_network
    labels:
      # Runtipi managed
      runtipi.managed: true

  template-fh-web:
    container_name: template-fh-web
    image: <image>
    restart: unless-stopped
    ports:
      - ${APP_PORT}:<port>
    volumes:
      - ${APP_DATA_DIR}/data/template-fh-web/file.xyz:/path/in/app/to/file.xyz
      - ${APP_DATA_DIR}/data/template-fh:/path/in/app
    environment:
      - VIRTUAL_HOST=${APP_DOMAIN}
    depends_on:
      - template-fh
    networks:
      - tipi_main_network
    labels:
      # Main
      traefik.enable: true
      traefik.http.middlewares.template-fh-web-redirect.redirectscheme.scheme: https
      traefik.http.services.template-fh-web.loadbalancer.server.port: <port>
      # Web
      traefik.http.routers.template-fh-web-insecure.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.template-fh-web-insecure.entrypoints: web
      traefik.http.routers.template-fh-web-insecure.service: template-fh-web
      traefik.http.routers.template-fh-web-insecure.middlewares: template-fh-web-redirect
      # Websecure
      traefik.http.routers.template-fh-web.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.template-fh-web.entrypoints: websecure
      traefik.http.routers.template-fh-web.service: template-fh
      traefik.http.routers.template-fh-web.tls.certresolver: myresolver
      # Local domain
      traefik.http.routers.template-fh-web-local-insecure.rule: Host(`template-fh.${LOCAL_DOMAIN}`)
      traefik.http.routers.template-fh-web-local-insecure.entrypoints: web
      traefik.http.routers.template-fh-web-local-insecure.service: template-fh-web
      traefik.http.routers.template-fh-web-local-insecure.middlewares: template-fh-web-redirect
      # Local domain secure
      traefik.http.routers.template-fh-web-local.rule: Host(`template-fh.${LOCAL_DOMAIN}`)
      traefik.http.routers.template-fh-web-local.entrypoints: websecure
      traefik.http.routers.template-fh-web-local.service: template-fh-web
      traefik.http.routers.template-fh-web-local.tls: true
      # Runtipi managed
      runtipi.managed: true

  template-fh-cron:
    container_name: template-fh-cron
    image: <image>
    restart: unless-stopped
    volumes:
      - ${APP_DATA_DIR}/data/template-fh:/path/in/app
    entrypoint: /cron.sh
    depends_on:
      - template-fh-db
      - template-fh-redis
    networks:
      - tipi_main_network
    labels:
      # Runtipi managed
      runtipi.managed: true

  template-fh-redis:
    container_name: template-fh-redis
    image: <image>
    restart: unless-stopped
    networks:
      - tipi_main_network
    labels:
      # Runtipi managed
      runtipi.managed: true

  template-fh-db:
    container_name: template-fh-db
    image: <image>
    restart: unless-stopped
    volumes:
      - ${APP_DATA_DIR}/data/db:/path/in/app
    environment:
      - ENV=env
    networks:
      - tipi_main_network
    labels:
      # Runtipi managed
      runtipi.managed: true
