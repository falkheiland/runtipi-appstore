services:
  nextcloud-fh:
    container_name: nextcloud-fh
    image: nextcloud:30.0.5-fpm-alpine
    restart: unless-stopped
    ports:
      - ${APP_PORT}:80
    volumes:
      - ${APP_DATA_DIR}/data/nextcloud:/var/www/html
    environment:
      - POSTGRES_HOST=nextcloud-fh-db
      - POSTGRES_DB=nextcloud
      - POSTGRES_USER=nextcloud
      - POSTGRES_PASSWORD=${NEXTCLOUD_FH_DB_PASSWORD}
      - NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_FH_ADMIN_PASSWORD}
      - NEXTCLOUD_ADMIN_USER=${NEXTCLOUD_FH_ADMIN_USER}
      - NEXTCLOUD_TRUSTED_DOMAINS=${NEXTCLOUD_FH_TRUSTED_DOMAINS}
    depends_on:
      - nextcloud-fh-db
      - nextcloud-fh-redis
    networks:
      - tipi_main_network
    labels:
      # Main
      traefik.enable: true
      traefik.http.middlewares.nextcloud-fh-web-redirect.redirectscheme.scheme: https
      traefik.http.services.nextcloud-fh.loadbalancer.server.port: 80
      # Web
      traefik.http.routers.nextcloud-fh-insecure.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.nextcloud-fh-insecure.entrypoints: web
      traefik.http.routers.nextcloud-fh-insecure.service: nextcloud-fh
      traefik.http.routers.nextcloud-fh-insecure.middlewares: nextcloud-fh-web-redirect
      # Websecure
      traefik.http.routers.nextcloud-fh.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.nextcloud-fh.entrypoints: websecure
      traefik.http.routers.nextcloud-fh.service: nextcloud-fh
      traefik.http.routers.nextcloud-fh.tls.certresolver: myresolver
      # Local domain
      traefik.http.routers.nextcloud-fh-local-insecure.rule: Host(`nextcloud-fh.${LOCAL_DOMAIN}`)
      traefik.http.routers.nextcloud-fh-local-insecure.entrypoints: web
      traefik.http.routers.nextcloud-fh-local-insecure.service: nextcloud-fh
      traefik.http.routers.nextcloud-fh-local-insecure.middlewares: nextcloud-fh-web-redirect
      # Local domain secure
      traefik.http.routers.nextcloud-fh-local.rule: Host(`nextcloud-fh.${LOCAL_DOMAIN}`)
      traefik.http.routers.nextcloud-fh-local.entrypoints: websecure
      traefik.http.routers.nextcloud-fh-local.service: nextcloud-fh
      traefik.http.routers.nextcloud-fh-local.tls: true
      # Runtipi managed
      runtipi.managed: true

  nextcloud-fh-cron:
    container_name: nextcloud-fh-cron
    image: nextcloud:30.0.5-fpm-alpine
    restart: unless-stopped
    volumes:
      - ${APP_DATA_DIR}/data/nextcloud:/var/www/html
    entrypoint: /cron.sh
    depends_on:
      - nextcloud-fh
      - nextcloud-fh-db
      - nextcloud-fh-redis
    networks:
      - tipi_main_network
    labels:
      # Runtipi managed
      runtipi.managed: true

  nextcloud-fh-db:
    container_name: nextcloud-fh-db
    image: postgres:16-alpine
    restart: unless-stopped
    volumes:
      - ${APP_DATA_DIR}/data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=nextcloud
      - POSTGRES_USER=nextcloud
      - POSTGRES_PASSWORD=${NEXTCLOUD_FH_DB_PASSWORD}
    networks:
      - tipi_main_network
    labels:
      # Runtipi managed
      runtipi.managed: true
